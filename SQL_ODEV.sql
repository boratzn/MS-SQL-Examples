-----CONSTRAINTS
ALTER TABLE Urunler
ADD CONSTRAINT UQ_URUNLER_BARKOD UNIQUE(Barkod)

EXEC SP_URUN_EKLE '321355421456', 'LAPTOP', 20, 1, NULL, 'ADET', 1, 3, NULL, 2000, 1, 18
----INSERT
ALTER PROC SP_URUN_EKLE(@BARKOD VARCHAR(20), @URUN_ADI VARCHAR(200), @STOK_MIKTARI INT, @KRITIK_STOK_SAYISI INT, @SON_KULLANMA_TARIHI DATE, @BIRIMI VARCHAR(25), @SINIF_ID INT, @KATEGORI_ID INT, @OZEL_KOD_ID INT, @BIRIM_ALIS_FIYAT DECIMAL(18,2), @KDV_DAHIL_MI BIT, @KDV_ORAN INT)
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
			INSERT INTO Urunler
			VALUES(@BARKOD, @URUN_ADI, @STOK_MIKTARI, @KRITIK_STOK_SAYISI, @SON_KULLANMA_TARIHI, @BIRIMI, @SINIF_ID, @KATEGORI_ID, @OZEL_KOD_ID)
			DECLARE @URUN_ID INT = (SELECT TOP 1 UrunID FROM Urunler ORDER BY UrunID DESC)
			EXEC SP_URUN_DETAY_EKLE @URUN_ID, @BIRIM_ALIS_FIYAT, @KDV_DAHIL_MI, @KDV_ORAN

			INSERT INTO LOG_TABLE
			VALUES(SUSER_NAME(), GETDATE(), 'INSERT INTO Urunler
			VALUES(@BARKOD, @URUN_ADI, @STOK_MIKTARI, @KRITIK_STOK_SAYISI, @SON_KULLANMA_TARIHI, @BIRIMI, @SINIF_ID, @KATEGORI_ID, @OZEL_KOD_ID)')
		COMMIT TRAN
	END TRY
	BEGIN CATCH 
		PRINT 'HATA : ' + ERROR_MESSAGE()
		ROLLBACK TRAN
	END CATCH
END
-------
CREATE PROC SP_URUN_DETAY_EKLE(@URUN_ID INT, @BIRIM_ALIS_FIYAT DECIMAL(18,2), @KDV_DAHIL_MI BIT, @KDV_ORAN INT)
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
			INSERT INTO UrunDetayTBL
			VALUES(@URUN_ID, @BIRIM_ALIS_FIYAT, @KDV_DAHIL_MI, @KDV_ORAN);
			COMMIT TRAN
	END TRY
	BEGIN CATCH
		PRINT 'HATA'
		ROLLBACK TRAN
	END CATCH
END
-----------------------------------------DELETE----------------------------------------------------------
EXEC SP_URUN_SIL 2
ALTER PROC SP_URUN_SIL(@URUN_ID INT)
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
			EXEC SP_URUN_DETAY_SIL @URUN_ID
			DELETE FROM Urunler WHERE UrunID = @URUN_ID 

			INSERT INTO LOG_TABLE
			VALUES(SUSER_NAME(), GETDATE(), 'DELETE FROM Urunler WHERE UrunID = @URUN_ID ')
			COMMIT TRAN
	END TRY
	BEGIN CATCH
		PRINT 'HATA : ' + ERROR_MESSAGE()
		ROLLBACK TRAN
	END CATCH
END
-------------------------
CREATE PROC SP_URUN_DETAY_SIL(@URUN_ID INT)
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
			DELETE FROM UrunDetayTBL WHERE UrunID = @URUN_ID
			COMMIT TRAN
	END TRY
	BEGIN CATCH
		PRINT 'HATA'
		ROLLBACK TRAN
	END CATCH
END
-------------------------------------------------UPDATE------------------------------------------------------
EXEC SP_URUN_GUNCELLE 10, '6546512135', 'ARÇELÝK', 10, 2, '2022-01-29', 'Adet', 2,2,NULL, 2000, 1, 18
SELECT * FROM Urunler
ALTER PROC SP_URUN_GUNCELLE(@URUN_ID INT, @BARKOD VARCHAR(20), @URUN_ADI VARCHAR(200), @STOK_MIKTARI INT, @KRITIK_STOK_SAYISI INT, @SON_KULLANMA_TARIHI DATE, @BIRIMI VARCHAR(25), @SINIF_ID INT, @KATEGORI_ID INT, @OZEL_KOD_ID INT, @BIRIM_ALIS_FIYAT DECIMAL(18,2), @KDV_DAHIL_MI BIT, @KDV_ORAN INT)
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
			UPDATE Urunler
			SET Barkod = @BARKOD,
			UrunAdi = @URUN_ADI,
			StokMiktari = @STOK_MIKTARI,
			KritikStokSayisi = @KRITIK_STOK_SAYISI,
			SonKullanmaTarihi = @SON_KULLANMA_TARIHI,
			Birimi = @BIRIMI,
			SinifID = @SINIF_ID,
			KategoriID = @KATEGORI_ID,
			OzelKodID = @OZEL_KOD_ID
			WHERE UrunID = @URUN_ID

			EXEC SP_URUN_DETAY_GUNCELLE @URUN_ID, @BIRIM_ALIS_FIYAT, @KDV_DAHIL_MI , @KDV_ORAN 
			
			INSERT INTO LOG_TABLE
			VALUES(SUSER_NAME(), GETDATE(), 'UPDATE Urunler
			SET Barkod = @BARKOD,
			UrunAdi = @URUN_ADI,
			StokMiktari = @STOK_MIKTARI,
			KritikStokSayisi = @KRITIK_STOK_SAYISI,
			SonKullanmaTarihi = @SON_KULLANMA_TARIHI,
			Birimi = @BIRIMI,
			SinifID = @SINIF_ID,
			KategoriID = @KATEGORI_ID,
			OzelKodID = @OZEL_KOD_ID
			WHERE UrunID = @URUN_ID')

			COMMIT TRAN
	END TRY
	BEGIN CATCH
		PRINT 'HATA : ' + ERROR_MESSAGE()
		ROLLBACK TRAN
	END CATCH
END
-----------
CREATE PROC SP_URUN_DETAY_GUNCELLE(@URUN_ID INT, @BIRIM_ALIS_FIYAT DECIMAL(18,2), @KDV_DAHIL_MI BIT, @KDV_ORAN INT)
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
			UPDATE UrunDetayTBL
			SET BirimAlisFiyat = @BIRIM_ALIS_FIYAT,
			KDVDahilMi = @KDV_DAHIL_MI,
			KDVOran = @KDV_ORAN
			WHERE UrunID = @URUN_ID
			COMMIT TRAN
	END TRY
	BEGIN CATCH
		PRINT 'HATA : ' + ERROR_MESSAGE()
		ROLLBACK TRAN
	END CATCH
END
----------------------------KRÝTÝK STOK KONTROLÜ-------------------------------------------
ALTER PROC SP_KRITIK_STOK_KONTROL(@URUN_ID INT)
AS
BEGIN 
	BEGIN TRY
		BEGIN TRAN
			DECLARE @STOK_MIKTARI INT = (SELECT StokMiktari FROM Urunler WHERE UrunID = @URUN_ID)
			DECLARE @KRITIK_STOK_SAYISI INT = (SELECT KritikStokSayisi FROM Urunler WHERE UrunID = @URUN_ID)
			DECLARE @URUN_ADI VARCHAR(50) = (SELECT UrunAdi FROM Urunler WHERE UrunID = @URUN_ID)
			IF(@STOK_MIKTARI <= @KRITIK_STOK_SAYISI)
				BEGIN
					PRINT @URUN_ADI + ' ÝSÝMLÝ ÜRÜN KRÝTÝK STOK SAYISINA ULAÞTI!!!!!!'
				END
			ELSE
				BEGIN
					PRINT @URUN_ADI + ' isimli ürünün Stok Sayýsý : ' + CONVERT(VARCHAR(50), @STOK_MIKTARI) + '  Kritik Stok Sayýsý: ' + CAST(@KRITIK_STOK_SAYISI AS VARCHAR(50));
				END
				COMMIT TRAN
	END TRY
	BEGIN CATCH
		PRINT 'HATA : ' + ERROR_MESSAGE()
		ROLLBACK TRAN
	END CATCH
END

EXEC SP_KRITIK_STOK_KONTROL 1

-------------------------------------STOK KONTROL-----------------------------------------------------
CREATE TRIGGER TRG_SKT_KONTROL
ON Urunler
FOR INSERT, UPDATE
AS
BEGIN
	DECLARE @URUN_ID INT = (SELECT UrunID FROM inserted)
	EXEC dbo.SP_SKT_KONTROL @URUN_ID, ''
END
---------------
ALTER PROC SP_SKT_KONTROL(@URUN_ID INT, @DURUM VARCHAR(100) OUTPUT)
AS
BEGIN 
	DECLARE @SKT DATE = (SELECT SonKullanmaTarihi FROM Urunler WHERE UrunID = @URUN_ID)
	IF(@SKT IS NOT NULL)
		BEGIN
			DECLARE @GUN_FARKI INT = DATEDIFF(DAY, GETDATE(), @SKT)
			SET @DURUM = (CASE 
				WHEN @GUN_FARKI >=0 AND @GUN_FARKI <= 10 THEN 'SON KULLANMA TARÝHÝ YAKLAÞIYOR!!!' 
				WHEN @GUN_FARKI > 10 THEN 'SON KULLANMA TARÝHÝNE ' + CAST(@GUN_FARKI AS VARCHAR(50)) + ' GÜN VAR'
				ELSE 'SON KULLANMA TARÝHÝ GEÇMÝÞ!!!!!!'
			END)
			PRINT @DURUM
		END
		ELSE
			BEGIN
				SET @DURUM = 'SON KULLANMA TARÝHÝ GÝRÝLMEMÝÞTÝR!!!!'
				PRINT @DURUM
			END
END
-----------------------------------------------RAPOR1-------------------------------------------------------
CREATE VIEW VW_KATEGORIYE_GORE_TOPLAM_FIYAT_LISTELEME
AS
(
	SELECT K.KategoriAdi, SUM(UD.BirimAlisFiyat) AS TOPLAM_ALIS_FIYAT
	FROM Urunler U
	INNER JOIN UrunDetayTBL UD
	ON U.UrunID = UD.UrunID
	INNER JOIN Kategoriler K
	ON U.KategoriID = K.KategoriID
	GROUP BY K.KategoriAdi
)

SELECT * FROM VW_KATEGORIYE_GORE_TOPLAM_FIYAT_LISTELEME

-------------------------------------SATIS HESAPLAMA FONKSIYONU----------------------------------------

ALTER FUNCTION FN_KDV_HESAPLA(@URUN_ID INT)
RETURNS DECIMAL
AS
BEGIN
	DECLARE @ALIS_FIYAT DECIMAL = (SELECT BirimAlisFiyat FROM UrunDetayTBL WHERE UrunID = @URUN_ID) 
	DECLARE @KDV_ORAN INT = (SELECT KDVOran FROM UrunDetayTBL WHERE UrunID = @URUN_ID) 
	DECLARE @KDV_DAHIL_MI BIT = (SELECT KDVDahilMi FROM UrunDetayTBL WHERE UrunID = @URUN_ID)
	IF(@KDV_DAHIL_MI = 1)
		BEGIN
			SET @ALIS_FIYAT = @ALIS_FIYAT + ((@ALIS_FIYAT * @KDV_ORAN)/100)
			RETURN @ALIS_FIYAT
		END
	RETURN @ALIS_FIYAT
END

SELECT dbo.FN_KDV_HESAPLA(2)
--------------------------------

CREATE TABLE LOG_TABLE
(
	Kullanýcý varchar(256),
	Tarih date,
	Islem varchar(200)
)

SELECT * FROM LOG_TABLE
